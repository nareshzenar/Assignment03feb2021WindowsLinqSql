#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment02feb2021WindowsLinqSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WFA3DotNet")]
	public partial class DMLQueriesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdoEmp(AdoEmp instance);
    partial void UpdateAdoEmp(AdoEmp instance);
    partial void DeleteAdoEmp(AdoEmp instance);
    #endregion
		
		public DMLQueriesDataContext() : 
				base(global::Assignment02feb2021WindowsLinqSql.Properties.Settings.Default.WFA3DotNetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DMLQueriesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DMLQueriesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DMLQueriesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DMLQueriesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdoEmp> AdoEmps
		{
			get
			{
				return this.GetTable<AdoEmp>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_Insert")]
		public int sp_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string ename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> esal, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> depno)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ename, esal, depno);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteEmp")]
		public int sp_DeleteEmp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateEmp")]
		public int sp_UpdateEmp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> eid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string ename, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> esal, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> depno)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eid, ename, esal, depno);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdoEmp")]
	public partial class AdoEmp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _eid;
		
		private string _ename;
		
		private System.Nullable<double> _esal;
		
		private System.Nullable<int> _depno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneidChanging(int value);
    partial void OneidChanged();
    partial void OnenameChanging(string value);
    partial void OnenameChanged();
    partial void OnesalChanging(System.Nullable<double> value);
    partial void OnesalChanged();
    partial void OndepnoChanging(System.Nullable<int> value);
    partial void OndepnoChanged();
    #endregion
		
		public AdoEmp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int eid
		{
			get
			{
				return this._eid;
			}
			set
			{
				if ((this._eid != value))
				{
					this.OneidChanging(value);
					this.SendPropertyChanging();
					this._eid = value;
					this.SendPropertyChanged("eid");
					this.OneidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ename", DbType="VarChar(20)")]
		public string ename
		{
			get
			{
				return this._ename;
			}
			set
			{
				if ((this._ename != value))
				{
					this.OnenameChanging(value);
					this.SendPropertyChanging();
					this._ename = value;
					this.SendPropertyChanged("ename");
					this.OnenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_esal", DbType="Float")]
		public System.Nullable<double> esal
		{
			get
			{
				return this._esal;
			}
			set
			{
				if ((this._esal != value))
				{
					this.OnesalChanging(value);
					this.SendPropertyChanging();
					this._esal = value;
					this.SendPropertyChanged("esal");
					this.OnesalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depno", DbType="Int")]
		public System.Nullable<int> depno
		{
			get
			{
				return this._depno;
			}
			set
			{
				if ((this._depno != value))
				{
					this.OndepnoChanging(value);
					this.SendPropertyChanging();
					this._depno = value;
					this.SendPropertyChanged("depno");
					this.OndepnoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
